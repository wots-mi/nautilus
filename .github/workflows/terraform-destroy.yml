name: '⚠️ Terraform Destroy (Dangerous)'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod

# Ensure only one workflow runs at a time to prevent state lock conflicts
concurrency:
  group: terraform-${{ github.event.inputs.environment }}
  cancel-in-progress: false

env:
  TERRAFORM_VERSION: '1.13.4'
  WORKING_DIRECTORY: './terraform'

jobs:
  terraform-destroy:
    name: 'Terraform Destroy - ${{ github.event.inputs.environment }}'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: 'Azure Login with OIDC'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: 'Load Backend Configuration'
        id: backend-config
        run: |
          TFVARS_FILE="terraform.${{ github.event.inputs.environment }}.tfvars"
          STORAGE_ACCOUNT=$(grep 'backend_storage_account_name' $TFVARS_FILE | cut -d'=' -f2 | tr -d ' "')
          RESOURCE_GROUP=$(grep 'backend_resource_group_name' $TFVARS_FILE | cut -d'=' -f2 | tr -d ' "')
          CONTAINER=$(grep 'backend_container_name' $TFVARS_FILE | cut -d'=' -f2 | tr -d ' "')
          echo "storage_account=$STORAGE_ACCOUNT" >> $GITHUB_OUTPUT
          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "container=$CONTAINER" >> $GITHUB_OUTPUT
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: 'Terraform Init'
        run: |
          terraform init \
            -backend-config="storage_account_name=${{ steps.backend-config.outputs.storage_account }}" \
            -backend-config="resource_group_name=${{ steps.backend-config.outputs.resource_group }}" \
            -backend-config="container_name=${{ steps.backend-config.outputs.container }}" \
            -backend-config="key=terraform.tfstate"
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: 'Terraform Validate'
        run: terraform validate
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: 'Terraform Plan Destroy'
        run: terraform plan -destroy -no-color -var-file="terraform.${{ github.event.inputs.environment }}.tfvars"
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          TF_VAR_subscription_id_nautilus: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: '⚠️ Confirm Destruction'
        run: |
          echo "================================================"
          echo "⚠️  WARNING: DESTRUCTIVE OPERATION"
          echo "================================================"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "This will DESTROY all resources in the above environment!"
          echo "================================================"

      - name: 'Terraform Destroy'
        run: terraform destroy -auto-approve -no-color -var-file="terraform.${{ github.event.inputs.environment }}.tfvars"
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          TF_VAR_subscription_id_nautilus: ${{ secrets.ARM_SUBSCRIPTION_ID }}
